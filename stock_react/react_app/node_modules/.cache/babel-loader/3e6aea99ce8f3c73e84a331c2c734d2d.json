{"ast":null,"code":"var _jsxFileName = \"/home/colin/Downloads/stock_react/react_app/src/BarChart.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useRef, useEffect, useState } from 'react';\nimport { select, axisBottom, axisRight, scaleLinear, scaleBand } from \"d3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst useResizeObserver = ref => {\n  _s();\n\n  const [dimensions, setDimensions] = useState(null);\n  useEffect(() => {\n    const observeTarget = ref.current;\n    const resizeObserver = new ResizeObserver(entries => {\n      entries.forEach(entry => {\n        setDimensions(entry.contentRect);\n      });\n    });\n    resizeObserver.observe(observeTarget);\n    return () => {\n      resizeObserver.unobserve(observeTarget);\n    };\n  }, [ref]);\n  return dimensions;\n};\n\n_s(useResizeObserver, \"swpmFLcor9a4TnJ7R73Pli9/9G8=\");\n\nfunction BarChart({\n  data\n}) {\n  _s2();\n\n  date_price = {};\n  data[0][\"values\"].forEach(v => {\n    date_price[v[\"datetime\"]] = v[\"open\"];\n  });\n  const svgRef = useRef();\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef);\n  useEffect(() => {\n    const svg = select(svgRef.current);\n    console.log(dimensions);\n    if (!dimensions) return;\n    const xScale = scaleBand().domain(data[0][\"values\"].map((value, index) => index)).range([0, dimensions.width]).padding(0.5);\n    const yScale = scaleLinear().domain([0, 500]).range([dimensions.height, 0]);\n    const colorScale = scaleLinear().domain([75, 100, 150]).range([\"green\", \"orange\", \"red\"]).clamp(true);\n    const xAxis = axisBottom(xScale).ticks(data.length);\n    svg.select(\".x-axis\").style(\"transform\", `translateY(${dimensions.height}px)`).call(xAxis);\n    const yAxis = axisRight(yScale);\n    svg.select(\".y-axis\").style(\"transform\", `translateX(${dimensions.width})`).call(yAxis);\n    svg.selectAll(\".bar\").data(data[0][\"values\"]).join(\"rect\").attr(\"class\", \"bar\").style(\"transform\", \"scale(1,-1)\").attr(\"x\", (value, index) => xScale(index)).attr(\"y\", -dimensions.height).attr(\"width\", xScale.bandwidth()).on(\"mouseenter\", (event, value) => {\n      const index = svg.selectAll(\".bar\").nodes().indexOf(event.target);\n      svg.selectAll(\".tooltip\").data([value]).join(enter => enter.append(\"text\").attr(\"y\", yScale(value) - 4)).attr(\"class\", \"tooltip\").text(value).attr(\"x\", xScale(index) + xScale.bandwidth() / 2).attr(\"text-anchor\", \"middle\").transition().attr(\"y\", yScale(value) - 8).attr(\"opacity\", 1);\n    }).on(\"mouseleave\", () => svg.select(\".tooltip\").remove()).transition().attr(\"fill\", colorScale).attr(\"height\", value => dimensions.height - yScale(value));\n  }, [data, dimensions]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: wrapperRef,\n    style: {\n      marginBottom: \"2rem\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: svgRef,\n      children: [/*#__PURE__*/_jsxDEV(\"g\", {\n        className: \"x-axis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n        className: \"y-axis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 7\n  }, this);\n}\n\n_s2(BarChart, \"6bFCyBd3HKwDD6FYD4wxcBmp2CY=\", false, function () {\n  return [useResizeObserver];\n});\n\n_c = BarChart;\nexport default BarChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"BarChart\");","map":{"version":3,"sources":["/home/colin/Downloads/stock_react/react_app/src/BarChart.js"],"names":["React","useRef","useEffect","useState","select","axisBottom","axisRight","scaleLinear","scaleBand","useResizeObserver","ref","dimensions","setDimensions","observeTarget","current","resizeObserver","ResizeObserver","entries","forEach","entry","contentRect","observe","unobserve","BarChart","data","date_price","v","svgRef","wrapperRef","svg","console","log","xScale","domain","map","value","index","range","width","padding","yScale","height","colorScale","clamp","xAxis","ticks","length","style","call","yAxis","selectAll","join","attr","bandwidth","on","event","nodes","indexOf","target","enter","append","text","transition","remove","marginBottom"],"mappings":"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","sourcesContent":["import React, {useRef, useEffect, useState} from 'react'\nimport {select, axisBottom, axisRight, scaleLinear, scaleBand} from \"d3\"\n\nconst useResizeObserver = (ref) => {\n\n  const [dimensions, setDimensions] = useState(null);\n\n  useEffect(() => {\n    const observeTarget = ref.current;\n    const resizeObserver = new ResizeObserver((entries) => {\n      entries.forEach(entry => {\n        setDimensions(entry.contentRect)\n      })\n    });\n\n    resizeObserver.observe(observeTarget);\n    return () => {\n      resizeObserver.unobserve(observeTarget)\n    }\n\n  }, [ref]);\n  return dimensions;\n}\n\nfunction BarChart({data}){\n\n    date_price = {};\n\n    data[0][\"values\"].forEach((v) => {\n      date_price[v[\"datetime\"]] = v[\"open\"]\n\n    });\n\n    const svgRef = useRef();\n\n    const wrapperRef = useRef();\n\n    const dimensions = useResizeObserver(wrapperRef);\n\n    useEffect(() => {\n      const svg = select(svgRef.current);\n\n      console.log(dimensions);\n\n      if(!dimensions) return;\n\n      const xScale = scaleBand()\n          .domain(data[0][\"values\"].map((value,index) => index))\n          .range([0,dimensions.width]).\n          padding(0.5);\n\n      const yScale = scaleLinear()\n        .domain([0,500])\n        .range([dimensions.height,0])\n\n      const colorScale = scaleLinear()\n      .domain([75,100,150])\n      .range([\"green\",\"orange\",\"red\"])\n      .clamp(true)\n\n      const xAxis = axisBottom(xScale)\n        .ticks(data.length)\n\n      svg\n        .select(\".x-axis\")\n        .style(\"transform\",`translateY(${dimensions.height}px)`)\n        .call(xAxis)\n\n      const yAxis = axisRight(yScale);\n      svg\n        .select(\".y-axis\")\n        .style(\"transform\",`translateX(${dimensions.width})`)\n        .call(yAxis)\n\n      svg\n        .selectAll(\".bar\")\n        .data(data[0][\"values\"])\n        .join(\"rect\")\n        .attr(\"class\",\"bar\")\n        .style(\"transform\", \"scale(1,-1)\")\n        .attr(\"x\", (value,index)=>xScale(index))\n        .attr(\"y\",-dimensions.height)\n        .attr(\"width\",xScale.bandwidth())\n        .on(\"mouseenter\",(event,value) => {\n\n          const index = svg.selectAll(\".bar\").nodes().indexOf(event.target);\n\n          svg\n          .selectAll(\".tooltip\")\n          .data([value])\n          .join(enter => enter.append(\"text\").attr(\"y\", yScale(value)-4))\n          .attr(\"class\",\"tooltip\")\n          .text(value)\n          .attr(\"x\",xScale(index) + xScale.bandwidth()/2)\n          .attr(\"text-anchor\",\"middle\")\n          .transition()\n          .attr(\"y\",yScale(value)-8)\n          .attr(\"opacity\",1)\n        })\n        .on(\"mouseleave\", ()=>svg.select(\".tooltip\").remove())\n        .transition()\n        .attr(\"fill\",colorScale)\n        .attr(\"height\",value=>dimensions.height-yScale(value))\n        ;\n\n    }, [data, dimensions]);\n\n    return(\n      <div ref={wrapperRef} style={{marginBottom: \"2rem\"}}>\n        <svg ref={svgRef}>\n          <g className=\"x-axis\"/>\n          <g className=\"y-axis\"/>\n        </svg>\n      </div>\n    );\n}\n\nexport default BarChart;\n"]},"metadata":{},"sourceType":"module"}