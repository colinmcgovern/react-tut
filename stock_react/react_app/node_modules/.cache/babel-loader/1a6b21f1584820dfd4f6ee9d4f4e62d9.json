{"ast":null,"code":"var _jsxFileName = \"/home/colin/Downloads/react-tut/stock_react/react_app/src/ZoomableLineChart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { select, scaleLinear, line, max, curveCardinal, axisBottom, axisLeft, zoom, scaleTime } from \"d3\";\nimport useResizeObserver from \"./useResizeObserver\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction max_price(prices) {\n  let max_price = -1;\n  prices.forEach(price => {\n    if (price.value > max_price) {\n      max_price = price.value;\n    }\n  });\n  return max_price;\n}\n\nfunction ZoomableLineChart({\n  data,\n  id = \"myZoomableLineChart\"\n}) {\n  _s();\n\n  const svgRef = useRef();\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef);\n  const [currentZoomState, setCurrentZoomState] = useState(); //fixing raw stock data\n\n  var prices = [];\n  data[0][\"values\"].forEach(v => {\n    prices.push({\n      datetime: Date.parse(v[\"datetime\"]),\n      value: Number(v[\"open\"])\n    });\n  });\n  prices = prices.reverse();\n  useEffect(() => {\n    const svg = select(svgRef.current);\n    const svgContent = svg.select(\".content\");\n    const {\n      width,\n      height\n    } = dimensions || wrapperRef.current.getBoundingClientRect(); // scales + line generator\n\n    const xScale = scaleTime().domain([prices.at(0).datetime, prices.at(-1).datetime]).range([0, width]);\n\n    if (currentZoomState) {\n      const newXScale = currentZoomState.rescaleX(xScale);\n      xScale.domain(newXScale.domain());\n    }\n\n    const yScale = scaleLinear().domain([0, max_price(prices)]).range([height, 0]); //Lines\n\n    svgContent.selectAll(\"path\").remove();\n    svgContent.append(\"path\").datum(prices).attr(\"fill\", \"none\").attr(\"stroke\", \"steelblue\").attr(\"stroke-width\", 1.5).attr(\"d\", line().x(function (d) {\n      return xScale(d.datetime);\n    }).y(function (d) {\n      return yScale(d.value);\n    })); //Hover info\n\n    svgContent.selectAll(\"cicle\").remove();\n    svg.on(\"mousemove\", function (event) {\n      let bbox = svg.node().getBoundingClientRect();\n      let x = event.clientX - bbox.left;\n      let y = event.clientY - bbox.top;\n      let price = prices.find(e => e.datetime == xScale.invert(x));\n      let closest_date_dist = 1E8;\n      let closest_price = new Date();\n      prices.forEach(e => {\n        let dist = Math.abs(e.datetime - Number(xScale.invert(x)));\n\n        if (dist < closest_date_dist) {\n          closest_date_dist = dist;\n          closest_price = e;\n        }\n      });\n      svgContent.append(\"circle\") //circle radius is increased\n      .attr(\"r\", 4.5).attr(\"cx\", function (d) {\n        let date = new Date(closest_price.datetime);\n        return xScale(date);\n      }).attr(\"cy\", function (d) {\n        return yScale(closest_price.value);\n      });\n      svgContent.append(\"line\").attr(\"class\", \"y\").attr(\"id\", \"dashedLine\").style(\"stroke\", \"steelblue\").style(\"stroke-dasharray\", \"3,3\").style(\"opacity\", 0).attr(\"x1\", function (d) {\n        return x(d.date);\n      }).attr(\"y1\", function (d) {\n        return y(d.total_km);\n      }).attr(\"x2\", function (d) {\n        return x(d.date);\n      }).attr(\"y2\", height);\n    }); //svgContent.datum(prices).attr(\"d\", line().x(function(d) { console.log(d.datetime); return xScale(d.datetime) }));\n    //   svgContent.selectAll(\"path\")\n    // .on(\"mouseover\", function(d) {\n    //       div.transition()\n    //          .duration(200)\n    //          .style(\"opacity\", .9);\n    //       div.html(formatCount(d.total_km) + \" km\" + \"<br/>\" + formatTime(d.date))\n    //          .style(\"left\", (d3.event.pageX - 20) + \"px\")\n    // \t\t     .style(\"top\", (d3.event.pageY + 6) + \"px\");\n    //       //selects the horizontal dashed line in the group\n    //       d3.select(this.nextElementSibling).transition()\n    //           .duration(200)\n    //           .style(\"opacity\", .9);\n    //       //selects the vertical dashed line in the group\n    //       d3.select(this.nextElementSibling.nextElementSibling).transition()\n    //           .duration(200)\n    //           .style(\"opacity\", .9);\n    //       })\n    // axes\n\n    const xAxis = axisBottom(xScale);\n    svg.select(\".x-axis\").attr(\"transform\", `translate(0, ${height})`).call(xAxis);\n    const yAxis = axisLeft(yScale);\n    svg.select(\".y-axis\").call(yAxis); // zoom\n\n    const zoomBehavior = zoom().scaleExtent([1, 500]).translateExtent([[0, 0], [width, height]]).on(\"zoom\", event => {\n      const zoomState = event.transform;\n      setCurrentZoomState(zoomState);\n    });\n    svg.call(zoomBehavior);\n  }, [currentZoomState, data, dimensions]);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" APPL \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 5\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: wrapperRef,\n      style: {\n        marginBottom: \"2rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n        ref: svgRef,\n        children: [/*#__PURE__*/_jsxDEV(\"defs\", {\n          children: [/*#__PURE__*/_jsxDEV(\"clipPath\", {\n            id: id,\n            children: /*#__PURE__*/_jsxDEV(\"rect\", {\n              x: \"0\",\n              y: \"0\",\n              width: \"100%\",\n              height: \"100%\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 5\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 5\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 5\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"g\", {\n          className: \"content\",\n          clipPath: `url(#${id})`,\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 12\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"g\", {\n          className: \"x-axis\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n          className: \"y-axis\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 5\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 22\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 189,\n    columnNumber: 12\n  }, this);\n}\n\n_s(ZoomableLineChart, \"/KiWkGO4xuCDaFbcDOaAf23vnZg=\", false, function () {\n  return [useResizeObserver];\n});\n\n_c = ZoomableLineChart;\nexport default ZoomableLineChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"ZoomableLineChart\");","map":{"version":3,"sources":["/home/colin/Downloads/react-tut/stock_react/react_app/src/ZoomableLineChart.js"],"names":["React","useRef","useEffect","useState","select","scaleLinear","line","max","curveCardinal","axisBottom","axisLeft","zoom","scaleTime","useResizeObserver","max_price","prices","forEach","price","value","ZoomableLineChart","data","id","svgRef","wrapperRef","dimensions","currentZoomState","setCurrentZoomState","v","push","datetime","Date","parse","Number","reverse","svg","current","svgContent","width","height","getBoundingClientRect","xScale","domain","at","range","newXScale","rescaleX","yScale","selectAll","remove","append","datum","attr","x","d","y","on","event","bbox","node","clientX","left","clientY","top","find","e","invert","closest_date_dist","closest_price","dist","Math","abs","date","style","total_km","xAxis","call","yAxis","zoomBehavior","scaleExtent","translateExtent","zoomState","transform","marginBottom"],"mappings":"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","sourcesContent":["import React, {\n  useRef,\n  useEffect,\n  useState\n} from \"react\";\nimport {\n  select,\n  scaleLinear,\n  line,\n  max,\n  curveCardinal,\n  axisBottom,\n  axisLeft,\n  zoom,\n  scaleTime\n} from \"d3\";\nimport useResizeObserver from \"./useResizeObserver\";\n\nfunction max_price(prices) {\n  let max_price = -1;\n  prices.forEach((price) => {\n    if (price.value > max_price) {\n      max_price = price.value;\n    }\n  });\n  return max_price;\n}\n\nfunction ZoomableLineChart({\n  data,\n  id = \"myZoomableLineChart\"\n}) {\n  const svgRef = useRef();\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef);\n  const [currentZoomState, setCurrentZoomState] = useState();\n\n  //fixing raw stock data\n  var prices = [];\n  data[0][\"values\"].forEach((v) => {\n    prices.push({\n      datetime: Date.parse(v[\"datetime\"]),\n      value: Number(v[\"open\"])\n    });\n  });\n  prices = prices.reverse();\n\n  useEffect(() => {\n    const svg = select(svgRef.current);\n    const svgContent = svg.select(\".content\");\n    const {\n      width,\n      height\n    } =\n    dimensions || wrapperRef.current.getBoundingClientRect();\n\n    // scales + line generator\n\n    const xScale = scaleTime()\n      .domain([prices.at(0).datetime, prices.at(-1).datetime])\n      .range([0, width]);\n\n    if (currentZoomState) {\n      const newXScale = currentZoomState.rescaleX(xScale);\n      xScale.domain(newXScale.domain());\n    }\n\n    const yScale = scaleLinear()\n      .domain([0, max_price(prices)])\n      .range([height, 0]);\n\n    //Lines\n    svgContent.selectAll(\"path\").remove();\n\n    svgContent.append(\"path\")\n      .datum(prices)\n      .attr(\"fill\", \"none\")\n      .attr(\"stroke\", \"steelblue\")\n      .attr(\"stroke-width\", 1.5)\n      .attr(\"d\", line()\n        .x(function(d) {\n          return xScale(d.datetime)\n        })\n        .y(function(d) {\n          return yScale(d.value)\n        })\n      );\n\n    //Hover info\n\n    svgContent.selectAll(\"cicle\").remove();\n\n    svg\n      .on(\"mousemove\", function(event) {\n\n        let bbox = svg.node().getBoundingClientRect();\n        let x = event.clientX - bbox.left;\n        let y = event.clientY - bbox.top;\n\n        let price = prices.find(e => e.datetime == xScale.invert(x));\n\n        let closest_date_dist = 1E8;\n        let closest_price = new Date();\n\n        prices.forEach((e) => {\n          let dist = Math.abs(e.datetime - Number(xScale.invert(x)));\n          if (dist < closest_date_dist) {\n            closest_date_dist = dist;\n            closest_price = e;\n          }\n        });\n\n        svgContent.append(\"circle\")\n          //circle radius is increased\n          .attr(\"r\", 4.5)\n          .attr(\"cx\", function(d) {\n            let date = new Date(closest_price.datetime);\n            return xScale(date);\n          })\n          .attr(\"cy\", function(d) {\n            return yScale(closest_price.value);\n          });\n\n        svgContent.append(\"line\")\n          .attr(\"class\", \"y\")\n          .attr(\"id\", \"dashedLine\")\n          .style(\"stroke\", \"steelblue\")\n          .style(\"stroke-dasharray\", \"3,3\")\n          .style(\"opacity\", 0)\n          .attr(\"x1\", function(d) {\n            return x(d.date);\n          })\n          .attr(\"y1\", function(d) {\n            return y(d.total_km);\n          })\n          .attr(\"x2\", function(d) {\n            return x(d.date);\n          })\n          .attr(\"y2\", height);\n\n      });\n\n    //svgContent.datum(prices).attr(\"d\", line().x(function(d) { console.log(d.datetime); return xScale(d.datetime) }));\n\n    //   svgContent.selectAll(\"path\")\n    // .on(\"mouseover\", function(d) {\n    //       div.transition()\n    //          .duration(200)\n    //          .style(\"opacity\", .9);\n    //       div.html(formatCount(d.total_km) + \" km\" + \"<br/>\" + formatTime(d.date))\n    //          .style(\"left\", (d3.event.pageX - 20) + \"px\")\n    // \t\t     .style(\"top\", (d3.event.pageY + 6) + \"px\");\n    //       //selects the horizontal dashed line in the group\n    //       d3.select(this.nextElementSibling).transition()\n    //           .duration(200)\n    //           .style(\"opacity\", .9);\n    //       //selects the vertical dashed line in the group\n    //       d3.select(this.nextElementSibling.nextElementSibling).transition()\n    //           .duration(200)\n    //           .style(\"opacity\", .9);\n    //       })\n\n    // axes\n    const xAxis = axisBottom(xScale);\n    svg\n      .select(\".x-axis\")\n      .attr(\"transform\", `translate(0, ${height})`)\n      .call(xAxis);\n\n    const yAxis = axisLeft(yScale);\n    svg.select(\".y-axis\").call(yAxis);\n\n    // zoom\n    const zoomBehavior = zoom()\n      .scaleExtent([1, 500])\n      .translateExtent([\n        [0, 0],\n        [width, height],\n      ])\n      .on(\"zoom\", (event) => {\n        const zoomState = event.transform;\n        setCurrentZoomState(zoomState);\n      });\n\n    svg.call(zoomBehavior);\n\n  }, [currentZoomState, data, dimensions]);\n\n  return ( <\n    React.Fragment >\n    <\n    h1 > APPL < /h1> <\n    div ref = {\n      wrapperRef\n    }\n    style = {\n      {\n        marginBottom: \"2rem\"\n      }\n    } >\n    <\n    svg ref = {\n      svgRef\n    } >\n    <\n    defs >\n    <\n    clipPath id = {\n      id\n    } >\n    <\n    rect x = \"0\"\n    y = \"0\"\n    width = \"100%\"\n    height = \"100%\" / >\n    <\n    /clipPath> < /\n    defs > <\n    g className = \"content\"\n    clipPath = {\n      `url(#${id})`\n    } > < /g> <\n    g className = \"x-axis\" / >\n    <\n    g className = \"y-axis\" / >\n    <\n    /svg> < /\n    div > <\n    /React.Fragment>\n\n  );\n}\n\nexport default ZoomableLineChart;"]},"metadata":{},"sourceType":"module"}