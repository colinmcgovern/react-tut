{"ast":null,"code":"var _jsxFileName = \"/home/colin/Downloads/react_tut/react-task-tracker/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport AddTask from \"./components/AddTask\";\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([]);\n\n  const deleteTask = id => {\n    setTasks(tasks.filter(task => task.id !== id));\n  };\n\n  const toggleReminder = id => {\n    setTasks(tasks.map(task => task.id === id ? { ...task,\n      reminder: !task.reminder\n    } : task));\n  };\n\n  const addTask = task => {\n    const id = Math.floor(Math.random() * 1E4 + 1);\n    const newTask = {\n      id,\n      ...task\n    };\n    setTasks([...tasks, newTask]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      onAdd: () => setShowAddTask(!showAddTask),\n      showAdd: showAddTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), showAddTask && /*#__PURE__*/_jsxDEV(AddTask, {\n      onAdd: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 23\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks,\n      onDelete: deleteTask,\n      onToggle: toggleReminder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 10\n    }, this) : 'No tasks to show']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"S3DpIclh23jK8X+Pc4fpTgkkVQg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/colin/Downloads/react_tut/react-task-tracker/src/App.js"],"names":["Header","Tasks","AddTask","useState","App","showAddTask","setShowAddTask","tasks","setTasks","deleteTask","id","filter","task","toggleReminder","map","reminder","addTask","Math","floor","random","newTask","length"],"mappings":";;;;AACA,OAAO,WAAP;AAEA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEd,QAAM,CAACC,WAAD,EAAaC,cAAb,IAA+BH,QAAQ,CAAC,KAAD,CAA7C;AAEA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;;AAEF,QAAMM,UAAU,GAAIC,EAAD,IAAQ;AACzBF,IAAAA,QAAQ,CAACD,KAAK,CAACI,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACF,EAAL,KAAYA,EAAnC,CAAD,CAAR;AACD,GAFD;;AAIA,QAAMG,cAAc,GAAIH,EAAD,IAAQ;AAC7BF,IAAAA,QAAQ,CAACD,KAAK,CAACO,GAAN,CAAWF,IAAD,IAAUA,IAAI,CAACF,EAAL,KAAYA,EAAZ,GAC5B,EAAC,GAAGE,IAAJ;AAASG,MAAAA,QAAQ,EAAE,CAACH,IAAI,CAACG;AAAzB,KAD4B,GACSH,IAD7B,CAAD,CAAR;AAED,GAHD;;AAKA,QAAMI,OAAO,GAAIJ,IAAD,IAAU;AACxB,UAAMF,EAAE,GAAGO,IAAI,CAACC,KAAL,CAAYD,IAAI,CAACE,MAAL,KAAgB,GAAjB,GAAwB,CAAnC,CAAX;AACA,UAAMC,OAAO,GAAG;AAACV,MAAAA,EAAD;AAAK,SAAGE;AAAR,KAAhB;AACAJ,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAUa,OAAV,CAAD,CAAR;AACD,GAJD;;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE,QAAC,MAAD;AACE,MAAA,KAAK,EAAE,MAAMd,cAAc,CAAC,CAACD,WAAF,CAD7B;AAEE,MAAA,OAAO,EAAEA;AAFX;AAAA;AAAA;AAAA;AAAA,YADF,EAKGA,WAAW,iBAAI,QAAC,OAAD;AAAS,MAAA,KAAK,EAAEW;AAAhB;AAAA;AAAA;AAAA;AAAA,YALlB,EAMGT,KAAK,CAACc,MAAN,GAAe,CAAf,gBACE,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEd,KAAd;AAAqB,MAAA,QAAQ,EAAEE,UAA/B;AAA2C,MAAA,QAAQ,EAAEI;AAArD;AAAA;AAAA;AAAA;AAAA,YADF,GAGG,kBATN;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAnCD;;GAAMT,G;;KAAAA,G;AAqCN,eAAeA,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\n\nimport Header from \"./components/Header\"\nimport Tasks from \"./components/Tasks\"\nimport AddTask from \"./components/AddTask\"\nimport { useState } from 'react'\n\nconst App = () => {\n\n    const [showAddTask,setShowAddTask] = useState(false)\n\n    const [tasks, setTasks] = useState([])\n\n  const deleteTask = (id) => {\n    setTasks(tasks.filter((task) => task.id !== id))\n  }\n\n  const toggleReminder = (id) => {\n    setTasks(tasks.map((task) => task.id === id ?\n     {...task,reminder: !task.reminder} : task ))\n  }\n\n  const addTask = (task) => {\n    const id = Math.floor((Math.random() * 1E4) + 1)\n    const newTask = {id, ...task}\n    setTasks([...tasks,newTask])\n  }\n\n  return (\n    <div className=\"container\">\n      <Header \n        onAdd={() => setShowAddTask(!showAddTask)}\n        showAdd={showAddTask}\n      />\n      {showAddTask && <AddTask onAdd={addTask}/>}\n      {tasks.length > 0 ? \n        (<Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder}/>)\n        : \n        ( 'No tasks to show' )\n      }\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}