{"ast":null,"code":"var _jsxFileName = \"/home/colin/Downloads/react_tut/react-task-tracker/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport AddTask from \"./components/AddTask\";\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [tasks, setTasks] = useState([{\n    id: 1,\n    text: \"appointment\",\n    day: \"sept 28\",\n    reminder: true\n  }, {\n    id: 2,\n    text: \"appointment 2\",\n    day: \"sept 29\",\n    reminder: false\n  }]);\n\n  const deleteTask = id => {\n    setTasks(tasks.filter(task => task.id !== id));\n  };\n\n  const toggleReminder = id => {\n    setTasks(tasks.map(task => task.id === id ? { ...task,\n      reminder: !task.reminder\n    } : task));\n  };\n\n  const addTask = task => {\n    console.log(task);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddTask, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks,\n      onDelete: deleteTask,\n      onToggle: toggleReminder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 10\n    }, this) : 'No tasks to show']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"9xVj2/eZTmVJ5F7u6i1JPrlEy84=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/colin/Downloads/react_tut/react-task-tracker/src/App.js"],"names":["Header","Tasks","AddTask","useState","App","tasks","setTasks","id","text","day","reminder","deleteTask","filter","task","toggleReminder","map","addTask","console","log","length"],"mappings":";;;;AACA,OAAO,WAAP;AAEA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEX,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,CACnC;AACEI,IAAAA,EAAE,EAAC,CADL;AAEEC,IAAAA,IAAI,EAAE,aAFR;AAGEC,IAAAA,GAAG,EAAE,SAHP;AAIEC,IAAAA,QAAQ,EAAE;AAJZ,GADmC,EAQnC;AACEH,IAAAA,EAAE,EAAC,CADL;AAEEC,IAAAA,IAAI,EAAE,eAFR;AAGEC,IAAAA,GAAG,EAAE,SAHP;AAIEC,IAAAA,QAAQ,EAAE;AAJZ,GARmC,CAAD,CAAlC;;AAiBF,QAAMC,UAAU,GAAIJ,EAAD,IAAQ;AACzBD,IAAAA,QAAQ,CAACD,KAAK,CAACO,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACN,EAAL,KAAYA,EAAnC,CAAD,CAAR;AACD,GAFD;;AAIA,QAAMO,cAAc,GAAIP,EAAD,IAAQ;AAC7BD,IAAAA,QAAQ,CAACD,KAAK,CAACU,GAAN,CAAWF,IAAD,IAAUA,IAAI,CAACN,EAAL,KAAYA,EAAZ,GAC5B,EAAC,GAAGM,IAAJ;AAASH,MAAAA,QAAQ,EAAE,CAACG,IAAI,CAACH;AAAzB,KAD4B,GACSG,IAD7B,CAAD,CAAR;AAED,GAHD;;AAKA,QAAMG,OAAO,GAAIH,IAAD,IAAU;AACxBI,IAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAFF,EAGGR,KAAK,CAACc,MAAN,GAAe,CAAf,gBACE,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEd,KAAd;AAAqB,MAAA,QAAQ,EAAEM,UAA/B;AAA2C,MAAA,QAAQ,EAAEG;AAArD;AAAA;AAAA;AAAA;AAAA,YADF,GAGG,kBANN;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GA3CQV,G;;KAAAA,G;AA6CT,eAAeA,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\n\nimport Header from \"./components/Header\"\nimport Tasks from \"./components/Tasks\"\nimport AddTask from \"./components/AddTask\"\nimport { useState } from 'react'\n\nfunction App() {\n\n    const [tasks, setTasks] = useState([\n    {\n      id:1,\n      text: \"appointment\",\n      day: \"sept 28\",\n      reminder: true,\n    },\n\n    {\n      id:2,\n      text: \"appointment 2\",\n      day: \"sept 29\",\n      reminder: false,\n    },\n\n  ])\n\n  const deleteTask = (id) => {\n    setTasks(tasks.filter((task) => task.id !== id))\n  }\n\n  const toggleReminder = (id) => {\n    setTasks(tasks.map((task) => task.id === id ?\n     {...task,reminder: !task.reminder} : task ))\n  }\n\n  const addTask = (task) => {\n    console.log(task)\n  }\n\n  return (\n    <div className=\"container\">\n      <Header/>\n      <AddTask/>\n      {tasks.length > 0 ? \n        (<Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder}/>)\n        : \n        ( 'No tasks to show' )\n      }\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}