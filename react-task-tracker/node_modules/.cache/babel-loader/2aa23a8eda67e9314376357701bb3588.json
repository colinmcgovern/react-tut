{"ast":null,"code":"var _jsxFileName = \"/home/colin/Downloads/react_tut/react-task-tracker/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport AddTask from \"./components/AddTask\";\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      setTasks(tasksFromServer);\n    };\n\n    getTasks();\n  }, []);\n\n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:5000/tasks');\n    const data = await res.json();\n    return data;\n  };\n\n  const deleteTask = async id => {\n    await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'DELETE'\n    });\n    setTasks(tasks.filter(task => task.id !== id));\n  };\n\n  const toggleReminder = id => {\n    setTasks(tasks.map(task => task.id === id ? { ...task,\n      reminder: !task.reminder\n    } : task));\n  };\n\n  const addTask = async task => {\n    const res = await fetch(`http://localhost:5000/tasks`, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    });\n    const data = await res.json();\n    setTasks([...tasks, data]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      onAdd: () => setShowAddTask(!showAddTask),\n      showAdd: showAddTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), showAddTask && /*#__PURE__*/_jsxDEV(AddTask, {\n      onAdd: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 23\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks,\n      onDelete: deleteTask,\n      onToggle: toggleReminder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 10\n    }, this) : 'No tasks to show']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"qkMnXyEh5aZ//+FDh/FdrZM7KGU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/colin/Downloads/react_tut/react-task-tracker/src/App.js"],"names":["Header","Tasks","AddTask","useState","useEffect","App","showAddTask","setShowAddTask","tasks","setTasks","getTasks","tasksFromServer","fetchTasks","res","fetch","data","json","deleteTask","id","method","filter","task","toggleReminder","map","reminder","addTask","headers","body","JSON","stringify","length"],"mappings":";;;;AACA,OAAO,WAAP;AAEA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEd,QAAM,CAACC,WAAD,EAAaC,cAAb,IAA+BJ,QAAQ,CAAC,KAAD,CAA7C;AAEA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AAEd,UAAMM,QAAQ,GAAG,YAAW;AAC1B,YAAMC,eAAe,GAAG,MAAMC,UAAU,EAAxC;AACAH,MAAAA,QAAQ,CAACE,eAAD,CAAR;AACD,KAHD;;AAKAD,IAAAA,QAAQ;AAET,GATQ,EASN,EATM,CAAT;;AAWA,QAAME,UAAU,GAAG,YAAY;AAC7B,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,6BAAD,CAAvB;AACA,UAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AACA,WAAOD,IAAP;AACD,GAJD;;AAMF,QAAME,UAAU,GAAG,MAAOC,EAAP,IAAc;AAE/B,UAAMJ,KAAK,CAAE,+BAA8BI,EAAG,EAAnC,EAAsC;AAC/CC,MAAAA,MAAM,EAAE;AADuC,KAAtC,CAAX;AAIAV,IAAAA,QAAQ,CAACD,KAAK,CAACY,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACH,EAAL,KAAYA,EAAnC,CAAD,CAAR;AACD,GAPD;;AASA,QAAMI,cAAc,GAAIJ,EAAD,IAAQ;AAC7BT,IAAAA,QAAQ,CAACD,KAAK,CAACe,GAAN,CAAWF,IAAD,IAAUA,IAAI,CAACH,EAAL,KAAYA,EAAZ,GAC5B,EAAC,GAAGG,IAAJ;AAASG,MAAAA,QAAQ,EAAE,CAACH,IAAI,CAACG;AAAzB,KAD4B,GACSH,IAD7B,CAAD,CAAR;AAED,GAHD;;AAKA,QAAMI,OAAO,GAAG,MAAOJ,IAAP,IAAgB;AAE9B,UAAMR,GAAG,GAAG,MAAMC,KAAK,CAAE,6BAAF,EAAgC;AACrDK,MAAAA,MAAM,EAAE,MAD6C;AAErDO,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAF4C;AAKrDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,IAAf;AAL+C,KAAhC,CAAvB;AAQA,UAAMN,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AAEAP,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAUO,IAAV,CAAD,CAAR;AACD,GAbD;;AAeA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE,QAAC,MAAD;AACE,MAAA,KAAK,EAAE,MAAMR,cAAc,CAAC,CAACD,WAAF,CAD7B;AAEE,MAAA,OAAO,EAAEA;AAFX;AAAA;AAAA;AAAA;AAAA,YADF,EAKGA,WAAW,iBAAI,QAAC,OAAD;AAAS,MAAA,KAAK,EAAEmB;AAAhB;AAAA;AAAA;AAAA;AAAA,YALlB,EAMGjB,KAAK,CAACsB,MAAN,GAAe,CAAf,gBACE,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEtB,KAAd;AAAqB,MAAA,QAAQ,EAAES,UAA/B;AAA2C,MAAA,QAAQ,EAAEK;AAArD;AAAA;AAAA;AAAA;AAAA,YADF,GAGG,kBATN;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAlED;;GAAMjB,G;;KAAAA,G;AAoEN,eAAeA,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\n\nimport Header from \"./components/Header\"\nimport Tasks from \"./components/Tasks\"\nimport AddTask from \"./components/AddTask\"\nimport { useState, useEffect } from 'react'\n\nconst App = () => {\n\n    const [showAddTask,setShowAddTask] = useState(false)\n\n    const [tasks, setTasks] = useState([])\n\n    useEffect(() => {\n      \n      const getTasks = async() => {\n        const tasksFromServer = await fetchTasks()\n        setTasks(tasksFromServer)\n      }\n\n      getTasks()\n\n    }, [])\n\n    const fetchTasks = async () => {\n      const res = await fetch('http://localhost:5000/tasks')\n      const data = await res.json()\n      return data\n    }\n\n  const deleteTask = async (id) => {\n\n    await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'DELETE'\n    })\n\n    setTasks(tasks.filter((task) => task.id !== id))\n  }\n\n  const toggleReminder = (id) => {\n    setTasks(tasks.map((task) => task.id === id ?\n     {...task,reminder: !task.reminder} : task ))\n  }\n\n  const addTask = async (task) => {\n\n    const res = await fetch(`http://localhost:5000/tasks`, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    })\n\n    const data = await res.json()\n\n    setTasks([...tasks,data])\n  }\n\n  return (\n    <div className=\"container\">\n      <Header \n        onAdd={() => setShowAddTask(!showAddTask)}\n        showAdd={showAddTask}\n      />\n      {showAddTask && <AddTask onAdd={addTask}/>}\n      {tasks.length > 0 ? \n        (<Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder}/>)\n        : \n        ( 'No tasks to show' )\n      }\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}