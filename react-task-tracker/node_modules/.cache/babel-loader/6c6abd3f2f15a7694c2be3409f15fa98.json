{"ast":null,"code":"import _toConsumableArray from\"/home/colin/Downloads/react_tut/react-task-tracker/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/home/colin/Downloads/react_tut/react-task-tracker/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/colin/Downloads/react_tut/react-task-tracker/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import logo from\"./logo.svg\";import'./App.css';import Header from\"./components/Header\";import Tasks from\"./components/Tasks\";import AddTask from\"./components/AddTask\";import{useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=function App(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showAddTask=_useState2[0],setShowAddTask=_useState2[1];var _useState3=useState([{id:1,text:\"appointment\",day:\"sept 28\",reminder:true},{id:2,text:\"appointment 2\",day:\"sept 29\",reminder:false}]),_useState4=_slicedToArray(_useState3,2),tasks=_useState4[0],setTasks=_useState4[1];var deleteTask=function deleteTask(id){setTasks(tasks.filter(function(task){return task.id!==id;}));};var toggleReminder=function toggleReminder(id){setTasks(tasks.map(function(task){return task.id===id?_objectSpread(_objectSpread({},task),{},{reminder:!task.reminder}):task;}));};var addTask=function addTask(task){var id=Math.floor(Math.random()*1E4+1);var newTask=_objectSpread({id:id},task);setTasks([].concat(_toConsumableArray(tasks),[newTask]));};return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(Header,{onAdd:function onAdd(){return setShowAddTask(!showAddTask);},showAdd:showAddTask}),showAddTask&&/*#__PURE__*/_jsx(AddTask,{onAdd:addTask}),tasks.length>0?/*#__PURE__*/_jsx(Tasks,{tasks:tasks,onDelete:deleteTask,onToggle:toggleReminder}):'No tasks to show']});};export default App;","map":{"version":3,"sources":["/home/colin/Downloads/react_tut/react-task-tracker/src/App.js"],"names":["Header","Tasks","AddTask","useState","App","showAddTask","setShowAddTask","id","text","day","reminder","tasks","setTasks","deleteTask","filter","task","toggleReminder","map","addTask","Math","floor","random","newTask","length"],"mappings":"mbACA,MAAO,WAAP,CAEA,MAAOA,CAAAA,MAAP,KAAmB,qBAAnB,CACA,MAAOC,CAAAA,KAAP,KAAkB,oBAAlB,CACA,MAAOC,CAAAA,OAAP,KAAoB,sBAApB,CACA,OAASC,QAAT,KAAyB,OAAzB,C,wFAEA,GAAMC,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,EAAM,CAEd,cAAqCD,QAAQ,CAAC,KAAD,CAA7C,wCAAOE,WAAP,eAAmBC,cAAnB,eAEA,eAA0BH,QAAQ,CAAC,CACnC,CACEI,EAAE,CAAC,CADL,CAEEC,IAAI,CAAE,aAFR,CAGEC,GAAG,CAAE,SAHP,CAIEC,QAAQ,CAAE,IAJZ,CADmC,CAQnC,CACEH,EAAE,CAAC,CADL,CAEEC,IAAI,CAAE,eAFR,CAGEC,GAAG,CAAE,SAHP,CAIEC,QAAQ,CAAE,KAJZ,CARmC,CAAD,CAAlC,yCAAOC,KAAP,eAAcC,QAAd,eAiBF,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACN,EAAD,CAAQ,CACzBK,QAAQ,CAACD,KAAK,CAACG,MAAN,CAAa,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAACR,EAAL,GAAYA,EAAtB,EAAb,CAAD,CAAR,CACD,CAFD,CAIA,GAAMS,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACT,EAAD,CAAQ,CAC7BK,QAAQ,CAACD,KAAK,CAACM,GAAN,CAAU,SAACF,IAAD,QAAUA,CAAAA,IAAI,CAACR,EAAL,GAAYA,EAAZ,gCACxBQ,IADwB,MACnBL,QAAQ,CAAE,CAACK,IAAI,CAACL,QADG,GACSK,IADnB,EAAV,CAAD,CAAR,CAED,CAHD,CAKA,GAAMG,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACH,IAAD,CAAU,CACxB,GAAMR,CAAAA,EAAE,CAAGY,IAAI,CAACC,KAAL,CAAYD,IAAI,CAACE,MAAL,GAAgB,GAAjB,CAAwB,CAAnC,CAAX,CACA,GAAMC,CAAAA,OAAO,gBAAIf,EAAE,CAAFA,EAAJ,EAAWQ,IAAX,CAAb,CACAH,QAAQ,8BAAKD,KAAL,GAAWW,OAAX,GAAR,CACD,CAJD,CAMA,mBACE,aAAK,SAAS,CAAC,WAAf,wBACE,KAAC,MAAD,EACE,KAAK,CAAE,uBAAMhB,CAAAA,cAAc,CAAC,CAACD,WAAF,CAApB,EADT,CAEE,OAAO,CAAEA,WAFX,EADF,CAKGA,WAAW,eAAI,KAAC,OAAD,EAAS,KAAK,CAAEa,OAAhB,EALlB,CAMGP,KAAK,CAACY,MAAN,CAAe,CAAf,cACE,KAAC,KAAD,EAAO,KAAK,CAAEZ,KAAd,CAAqB,QAAQ,CAAEE,UAA/B,CAA2C,QAAQ,CAAEG,cAArD,EADF,CAGG,kBATN,GADF,CAcD,CAlDD,CAoDA,cAAeZ,CAAAA,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\n\nimport Header from \"./components/Header\"\nimport Tasks from \"./components/Tasks\"\nimport AddTask from \"./components/AddTask\"\nimport { useState } from 'react'\n\nconst App = () => {\n\n    const [showAddTask,setShowAddTask] = useState(false)\n\n    const [tasks, setTasks] = useState([\n    {\n      id:1,\n      text: \"appointment\",\n      day: \"sept 28\",\n      reminder: true,\n    },\n\n    {\n      id:2,\n      text: \"appointment 2\",\n      day: \"sept 29\",\n      reminder: false,\n    },\n\n  ])\n\n  const deleteTask = (id) => {\n    setTasks(tasks.filter((task) => task.id !== id))\n  }\n\n  const toggleReminder = (id) => {\n    setTasks(tasks.map((task) => task.id === id ?\n     {...task,reminder: !task.reminder} : task ))\n  }\n\n  const addTask = (task) => {\n    const id = Math.floor((Math.random() * 1E4) + 1)\n    const newTask = {id, ...task}\n    setTasks([...tasks,newTask])\n  }\n\n  return (\n    <div className=\"container\">\n      <Header \n        onAdd={() => setShowAddTask(!showAddTask)}\n        showAdd={showAddTask}\n      />\n      {showAddTask && <AddTask onAdd={addTask}/>}\n      {tasks.length > 0 ? \n        (<Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder}/>)\n        : \n        ( 'No tasks to show' )\n      }\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}